- var section = 'checkbox-hack'
- var title = 'The "Checkbox Hack"'

section(class=section)
  .c-slide__header--no-body
    h1.t-color= title
    h3.fragment Nesting styles after a <i>:checked</i> pseudo class on a checkbox to gain functionality instead of just style

  aside.notes
    ul
      li often used in combination with animations/transitions
      li built a nice basic one to show you how it works



section(class=section)
  .c-slide__header.t-bg-color
    h4.c-slide__header--topic= title
    h2.c-slide__header--slide A Basic Example
  .c-slide__body
    .c-slide__content
      input(id='agree', type='checkbox', name='agree')
      label(for='agree') I blindly agree to your rules
      button.c-button--primary.sign-up-button Sign Me Up

      .fragment
        pre
          code.html.
            <!-- HTML -->
            <input id="agree" type="checkbox">
              
            <label for="agree">I blindly agree to your rules</label>
              
            <button class="sign-up-button">Sign Me Up</button>
          
          
          code.fragment.sass.
            // SCSS
            #agree {
              &:checked {
                ~ .sign-up-button {
                  opacity: 1;
                  pointer-events: all;
                }
              }
              
              ~ .sign-up-button {
                opacity: .6;
                pointer-events: none;
              }
            }

      p.fragment ( https://css-tricks.com/child-and-sibling-selectors/ )

  aside.notes
    ul
      li actually show the checkbox
      li common practice is to nest input in label - that won't work here
      li everything that changes based on :checked must be easily decended from the checkbox
      li lets look something more complex



section(class=section)
  .c-slide__header.t-bg-color
    h4.c-slide__header--topic= title
    h2.c-slide__header--slide Â¿Modals con no JS?
  .c-slide__body
    .c-slide__content
      h2 A Checkbox Powered Modal
      a(class="c-button t-bg-color" href="/dist/view/examples/modal.html", target="blank") demo

  aside.notes
    ul
      li label/id relationship allows multiple labels
      li point out what items are labels
      li 36 lines of CSS (prefixed, and cleanly organized)
      li 40 lines of easy to read SCSS
      li vs 338 for bootstrap modal.js (PLUS jQuery)



section(class=section)
  .c-slide__header.t-bg-color
    h4.c-slide__header--topic= title
    h2.c-slide__header--slide Expand/Collapse & Dropdowns
  .c-slide__body
    .c-slide__content
      .d-flex--even
        .c-accordion(style="width: 50%;")
          .c-accordion__item
            input(id='accordion-item--one', class='c-accordion__control c-control-input--visible', type='checkbox', name='accordion')
            label(for='accordion-item--one', class='c-accordion__trigger t-color') Lorem ipsum dolor sit amet
            p.c-accordion__content Lorem ipsum dolor sit amet, in vero wisi consectetuer has. Quas quidam ornatus ad vix.

          .c-accordion__item
            input(id='accordion-item--two', class='c-accordion__control c-control-input--visible', type='checkbox', name='accordion')
            label(for='accordion-item--two', class='c-accordion__trigger t-color') Lorem ipsum dolor sit amet
            p.c-accordion__content Lorem ipsum dolor sit amet, in vero wisi consectetuer has. Quas quidam ornatus ad vix.

          .c-accordion__item
            input(id='accordion-item--three', class='c-accordion__control c-control-input--visible', type='checkbox', name='accordion')
            label(for='accordion-item--three', class='c-accordion__trigger t-color') Lorem ipsum dolor sit amet
            p.c-accordion__content Lorem ipsum dolor sit amet, in vero wisi consectetuer has. Quas quidam ornatus ad vix.


        .c-dropdown
          input(id='dropdown', class='c-dropdown__control c-control-input--visible', type='checkbox', name='dropdown')
          .c-dropdown__container
            label(for='dropdown', class='c-button c-dropdown__trigger t-bg-color') options
            ul.c-dropdown__menu
              li.c-dropdown__menu-item
                label(for='theme-one', class='c-link') option one
              li.c-dropdown__menu-item
                label(for='theme-two', class='c-link') option two
              li.c-dropdown__menu-item
                label(for='theme-three', class='c-link') option three

  aside.notes
    ul
      li same concept, don't explain in detail
      li just for show to help give creative starting points

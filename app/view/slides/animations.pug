- var section = 'animations'
- var title = 'Animations'

section(class=section)
  .c-slide__header--no-body
    h1.t-color=title
    h3.fragment A change in property values over a specified duration of time<br>instead of occurring immediately

  aside.notes
    small
      ul
        li notice that is the same definition i gave for transitions



section(class=section)
  .c-slide__header.t-bg-color
    h4.c-slide__header--topic=title
    h3.c-slide__header--slide How are they different?
  .c-slide__body
    .c-slide__content
      h2.vs.fragment
        span.vs--animation.t-color.u-font--bold animations
        span.vs--vs.t-bg-color vs
        span.vs--transition.u-text--gray transitions
      p.c-comparison.fragment
        span.c-comparison__item.animations can stack on top of each other
        span.c-comparison__item.transitions you only get one per element
      p.c-comparison.fragment
        span.c-comparison__item.animations can loop
        span.c-comparison__item.transitions only forward/backward
      p.c-comparison.fragment
        span.c-comparison__item.animations reset when finished (default)
        span.c-comparison__item.transitions don't reset when finished
      p.c-comparison.fragment
        span.c-comparison__item.animations don't reverse themselves
        span.c-comparison__item.transitions automatically reverse

  aside.notes
    small
      ul
        li animations stack
        li repeatable
        li reset by default
        li don't automatically reverse



section(class=section)
  .c-slide__header.t-bg-color
    h4.c-slide__header--topic=title
    h3.c-slide__header--slide Syntax
  .c-slide__body
    .c-slide__content
      .d-flex__column--center
        pre.fit-code.fragment
          code.sass.
            .defaults {
              animation-name: none;
              animation-duration: 0s;
              animation-timing-function: ease;
              animation-delay: 0s;
              animation-iteration-count: 1;
              animation-direction: normal;
              animation-fill-mode: none;
              animation-play-state: running;
            }
        pre.fit-code.fragment
          code.sass.
            .shorthand {
              animation: none 0s ease 0s 1 normal none running;
            }

  aside.notes
    small
      ul
        li default properites
        li shorthand
        li name refers to keyframe
        li without keyframe, you have no animation



section(class=section)
  .c-slide__header.t-bg-color
    h4.c-slide__header--topic=title
    h3.c-slide__header--slide Keyframes
  .c-slide__body
    .c-slide__content
      p A keyframe is the actual definition of what the animation will do.
      pre.fit-code
        code.sass.
          .example {
            animation: spin 2s linear infinite;
          }
        code.sass.fragment.
          @keyframes spin {
            0% {
              transform: rotate(0);
            }
            100% {
              transform: rotate(360deg);
            }
          }
      .a-basic.t-bg-color.fragment

  aside.notes
    small
      ul
        li great resource - animate.css



- var properties = ['-moz-outline-radius', '-moz-outline-radius-bottomleft', '-moz-outline-radius-bottomright', '-moz-outline-radius-topleft', '-moz-outline-radius-topright', '-webkit-text-fill-color', '-webkit-text-stroke', '-webkit-text-stroke-color', '-webkit-touch-callout', 'all', 'backdrop-filter', 'background', 'background-color', 'background-position', 'background-size', 'border', 'border-bottom', 'border-bottom-color', 'border-bottom-left-radius', 'border-bottom-right-radius', 'border-bottom-width', 'border-color', 'border-left', 'border-left-color', 'border-left-width', 'border-radius', 'border-right', 'border-right-color', 'border-right-width', 'border-top', 'border-top-color', 'border-top-left-radius', 'border-top-right-radius', 'border-top-width', 'border-width', 'bottom', 'box-shadow', 'clip', 'clip-path', 'color', 'column-count', 'column-gap', 'column-rule', 'column-rule-color', 'column-rule-width', 'column-width', 'columns', 'filter', 'flex', 'flex-basis', 'flex-grow', 'flex-shrink', 'font', 'font-size', 'font-size-adjust', 'font-stretch', 'font-weight', 'grid-column-gap', 'grid-gap', 'grid-row-gap', 'height', 'left', 'letter-spacing', 'line-height', 'margin', 'margin-bottom', 'margin-left', 'margin-right', 'margin-top', 'mask', 'mask-position', 'mask-size', 'max-height', 'max-width', 'min-height', 'min-width', 'motion-offset', 'motion-rotation', 'object-position', 'opacity', 'order', 'outline', 'outline-color', 'outline-offset', 'outline-width', 'padding', 'padding-bottom', 'padding-left', 'padding-right', 'padding-top', 'perspective', 'perspective-origin', 'right', 'scroll-snap-coordinate', 'scroll-snap-destination', 'shape-image-threshold', 'shape-margin', 'shape-outside', 'text-decoration', 'text-decoration-color', 'text-emphasis', 'text-emphasis-color', 'text-indent', 'text-shadow', 'top', 'transform', 'transform-origin', 'vertical-align', 'visibility', 'width', 'word-spacing', 'z-index'];

section(class=section)
  .c-slide__header.t-bg-color
    h4.c-slide__header--topic=title
    h3.c-slide__header--slide What Can We Animate?
  .c-slide__body
    .c-slide__content
      .d-flex--wrap.d-flex--justify.c-property-list.fragment
        each prop in properties
          span= prop

  aside.notes
    small
      ul
        li these are the properties that are animatable
        li in this case 'can be changed with an animation'
        li not necessarily changed SMOOTHLY
        //- li lets take at look at <i>that</i> animation as an example
        li rule of thumb = numeric values
        li exception - z-index - paper analogy



section(class=section)
  .c-slide__header.t-bg-color
    h4.c-slide__header--topic=title
    h3.c-slide__header--slide Stacking Animations
  .c-slide__body
    .c-slide__content
      .fragment.destroyable
        .c-stacked-example__rendered
          .c-ball.a-bounce.t-bg-color
        .c-stacked-example__caption
          pre.o-block
            code.html.
              <!-- HTML -->
              <div class="c-ball a-bounce"></div>
              
              
            code.sass.
              // SCSS
              .a-bounce {
                animation: bounce .75s ease-in-out -.375s infinite alternate;
              }
              
              
              
              
              
              
              
              
              
              
              
      //- blank lines in code sample above are necessary

      .fragment.destroyable
        .c-stacked-example__rendered
          .c-ball.a-warp.t-bg-color
        .c-stacked-example__caption
          pre.o-block
            code.html.
              <!-- HTML -->
              <div class="c-ball a-warp"></div>
              
              
            code.sass.
              // SCSS
              // .a-bounce {
              //   animation: bounce .75s ease-out -.375s infinite alternate;
              // }
              
              .a-warp {
                animation: warp 1.5s ease-in-out -.375s infinite alternate;
              }
              
              
              
              
              
              
              
      //- blank lines in code sample above are necessary

      .fragment.destroyable
        .c-stacked-example__rendered
          .c-ball.a-bounce.a-warp.t-bg-color
        .c-stacked-example__caption
          pre.o-block
            code.html.
              <!-- HTML -->
              <div class="c-ball a-bounce a-warp"></div>
              
              
            code.sass.
              // SCSS
              .a-bounce {
                animation: bounce .75s ease-out -.375s infinite alternate;
                
                &.a-warp {
                  animation-name: bounce, warp;
                  animation-direction: alternate, normal;
                  animation-duration: .75s, 1.5s;
                }
              }
              
              .a-warp {
                animation: warp 1.5s ease-in-out -.375s infinite;
              }
      //- blank lines in code sample above are necessary

  aside.notes
    small
      ul
        li



section(class=section)
  .c-slide__header.t-bg-color
    h4.c-slide__header--topic=title
    h3.c-slide__header--slide Delayed Progress
  .c-slide__body
    .c-slide__content
      .c-race.fragment
        .c-race-item
          span.a-delay--none.t-color.t-border-color no delay
        .c-race-item
          span.a-delay--plus.t-color.t-border-color(data-content="positive delay") positive delay
        .c-race-item
          span.a-delay--minus.t-bg-color.t-border-color negative delay

  aside.notes
    small
      ul
        li 3 elements: no delay, 1s delay, -1s delay
        li which is going to get here first?
        //- li why would this be useful?
        //- li -- take this loading animation...



section(class=section)
  //- .c-slide__header.t-bg-color
  //-   h4.c-slide__header--topic=title
  //-   h3.c-slide__header--slide Change The Starting Point
  //- .c-slide__body
  //-   .c-slide__content.c-delay-demos
  //-     .d-flex--even.u-center.fragment.destroyable.visible.current-fragment
  //-       div
  //-         h4 no delay
  //-         .c-spinning-cirles--none.t-color
  //-       div
  //-         h4 + delay
  //-         .c-spinning-cirles--plus.t-color
  //-       div
  //-         h4 - delay
  //-         .c-spinning-cirles--minus.t-color
  //-     .d-flex--even.u-center.fragment.destroyable
  //-       div
  //-         h4 no delay
  //-         .c-spinning-cirles--none.is-paused.t-color
  //-       div
  //-         h4 + delay
  //-         .c-spinning-cirles--plus.is-paused.t-color
  //-       div
  //-         h4 - delay
  //-         .c-spinning-cirles--minus.is-paused.t-color
  //-     .d-flex--even.u-center.fragment.destroyable
  //-       div
  //-         h4 no delay
  //-         .c-spinning-cirles--none.t-color
  //-       div
  //-         h4 + delay
  //-         .c-spinning-cirles--plus.t-color
  //-       div
  //-         h4 - delay
  //-         .c-spinning-cirles--minus.t-color
  //- 
  //- aside.notes
  //-   small
  //-     ul
  //-       li
  .c-slide__header.t-bg-color
    h4.c-slide__header--topic=title
    h3.c-slide__header--slide Why Negative?
  .c-slide__body
    .c-slide__content
      .fragment.destroyable
        .c-stacked-example__rendered--large
          .c-ball.a-bounce.a-warp.t-bg-color
        .c-stacked-example__caption
          p no delay
      
      .fragment.destroyable
        .c-stacked-example__rendered--large
          .c-ball.a-bounce.a-warp.a-mod--break.a-mod--slow.t-bg-color
        .c-stacked-example__caption
          p paused <small class="u-text--gray">(no delay)</small>
      
      .fragment.destroyable
        .c-stacked-example__rendered--large
          .c-ball.a-bounce.a-warp.a-mod--shift.t-bg-color
        .c-stacked-example__caption
          p negative delay
      
      .fragment.destroyable
        .c-stacked-example__rendered--large
          .c-ball.a-bounce.a-warp.a-mod--break.a-mod--shift.a-mod--slow.t-bg-color
        .c-stacked-example__caption
          p paused <small class="u-text--gray">(no delay)</small>

  aside.notes
    small
      ul
        li without delay, ball "jumps" off ground
        li add a pause at "perceived" start point
        li "perceived" meaning first point actually displayed
        ll with negative delay, ball "falls" toward ground
        li disclaimer: different animations written for paused version



section(class=section)
  .c-slide__header.t-bg-color
    h4.c-slide__header--topic=title
    h3.c-slide__header--slide Chaining Timing Functions
  .c-slide__body
    .c-slide__content
      .fragment(data-fragment-index="2")
        .u-center--text.c-change-timing.t-color
      .fragment(data-fragment-index="1")
        pre
          code.sass.
            @keyframes sample {
              0% {
                animation-timing-function: ease-in;
                ...
              }
              33% {
                animation-timing-function: steps(4);
                ...
              }
              66% {
                animation-timing-function: ease-out;
                ...
              }
              100% {
                ...
              }
            }

  aside.notes
    small
      ul
        li 

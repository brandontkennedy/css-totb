.calendar-icon {
  // icon options
  $color: color(a); // color
  $scale: 2; // size
  
  background: color(white);
  box-shadow:
    inset 0 (2px * $scale) 0 0 color(white),
    inset 0 0 0 (1px * $scale) $color,
    inset 0 (6px * $scale) 0 0 $color,
  ;
  display: block;
  height: (18px * $scale);
  position: relative;
  width: (18px * $scale);

  &:before {
    background: $color;
    box-shadow:      
      (3px * $scale)  (-3px * $scale) 0 0 $color,
      (6px * $scale)  (-3px * $scale) 0 0 $color,
      (9px * $scale)  (-3px * $scale) 0 0 $color,
      (12px * $scale) (-3px * $scale) 0 0 $color,

      (3px * $scale)  0 0 0 $color,
      (6px * $scale)  0 0 0 $color,
      (9px * $scale)  0 0 0 $color,
      (12px * $scale) 0 0 0 $color,

       0             (3px * $scale) 0 0 $color,
      (3px * $scale) (3px * $scale) 0 0 $color,
      (6px * $scale) (3px * $scale) 0 0 $color,
    ;
    content: '';
    height: (2px * $scale);
    left: (2px * $scale);
    position: absolute;
    top: (11px * $scale);
    width: (2px * $scale);
  }

  &:after {
    background: none;
    border:  {
      radius: (4px * $scale);
    }
    box-shadow:
      (5px * $scale) (20px * $scale) 0 0   $color,
      (5px * $scale) (20px * $scale) 0 1px color(white),

      (-5px * $scale) (20px * $scale) 0 0   $color,
      (-5px * $scale) (20px * $scale) 0 1px color(white),
    ;
    content: "";
    height: (4px * $scale);
    left: 50%;
    position: absolute;
    top: (-20px * $scale);
    transform: translateX(-50%);
    width: (1px * $scale);
  }
}


// battery
$icon-width: 48px;
$size: $icon-width / 4;

%battery {
  border: 1px solid color(a) !important;
  border-radius: 3px;
  box-shadow:
  0 0 0 1px color(white),
  $size 0 0 ($size / -1.5) color(a),
  ;
  height: $icon-width / 2;
  //margin: $size * 2;
  position: relative;
  width: $icon-width - 3px;
}

.space__icons {
  display: inline-block;
  height: $icon-width;
  position: relative;
  width: $icon-width;
}

.box-shadows .c-property-list {
  @include property-list(transparent, 24);
  
  .space__icons {
    background: none;
    flex-grow: 0;
    margin: 52px;
    padding: 0;
    
    &-animated {
      margin: 100px;
    }
  }
}

.reveal {
  [class*=' c-icon--'], [class^='c-icon--'] {
    position: absolute;
  }
}

.reveal .c-icon {
  &--battery {
    &-empty {
      @extend %battery;
      border-color: color(c) !important;
      box-shadow:
        0 0 0 1px color(white),
        $size 0 0 ($size / -1.5) color(c),
      ;
      
      &:before {
        background: color(c);
        box-shadow: 0 0 0 2px color(white);
        content: '';
        height: 2px;
        left: 50%;
        position: absolute;
        top: 50%;
        transform: rotate(-20deg) translate(-50%, -50%);
        transform-origin: top left;
        width: ($icon-width * 1.1);
      }
    }
    
    &-low {
      @extend %battery;
      box-shadow:
        inset 0 0 0 2px color(white),
        inset ($size * 2) 0 0 ($size * -1) color(a),
        0 0 0 1px color(white),
        $size 0 0 ($size / -1.5) color(a),
      ;
    }
    
    &-mid {
      @extend %battery;
      box-shadow:
        inset 0 0 0 2px color(white),
        inset ($size * 3) 0 0 ($size * -1) color(a),
        0 0 0 1px color(white),
        $size 0 0 ($size / -1.5) color(a),
      ;
    }
    
    &-high {
      @extend %battery;
      box-shadow:
        inset 0 0 0 2px color(white),
        inset ($size * 4) 0 0 ($size * -1) color(a),
        0 0 0 1px color(white),
        $size 0 0 ($size / -1.5) color(a),
      ;
    }
    
    &-full {
      @extend %battery;
      box-shadow:
        inset 0 0 0 2px color(white),
        inset ($size * 5) 0 0 ($size * -1) color(f),
        0 0 0 1px color(white),
        $size 0 0 ($size / -1.5) color(a),
      ;
    }
    
    &-charging {
      @extend %battery;
      &:before, &:after {
        border: 0 solid transparent;
        border-bottom:  ($icon-width / 2) solid color(a);
        border-right-width: 5px;
        content: '';
        left: 45%;
        position: absolute;
        top: 0;
        transform: rotate(40deg) skewY(-40deg) translate(-30%, -45%);
      }
      
      &:after {
        transform: rotate(220deg) skewY(-40deg) translate(-30%, -45%);
      }
    }
  }

  &--menu {
    background: black;
    box-shadow:
      0 ($icon-width / -3) 0 0 black,
      0 ($icon-width / 3) 0 0 black,
    ;
    height: ($icon-width / 6);
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: $icon-width;
  }
  
  &--comments {
    background: black;
    border-radius: ($icon-width / 6);
    height: ($icon-width / 6) * 5;
    width: $icon-width;
    &:before, &:after {
      content: '';
      position: absolute;
    }
    &:before {
      background: white;
      box-shadow:
        0 (($icon-width / 12) * -2) 0 0 white,
        0 (($icon-width / 12) * 2) 0 0 white,
      ;
      height: $icon-width / 12;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      width: ($icon-width - ($icon-width / 3));
    }
    &:after {
      border: 0 solid transparent;
      border-left-width: $icon-width / 3;
      border-top: ($icon-width / 3) solid black;
      bottom: ($icon-width / -6);
      right: 0;
    }
  }
  
  &--flower {
    $petal: $icon-width / 3.5;
    background: white;
    border-radius: 50%;
    box-shadow:
      0 $petal 0 0 black,
      ($petal * -.866) ($petal * .5) 0 0 black,
      ($petal * .866) ($petal * .5) 0 0 black,
      0 ($petal * -1) 0 0 black,
      ($petal * -.866) ($petal * -.5) 0 0 black,
      ($petal * .866) ($petal * -.5) 0 0 black,
    ;
    height: $icon-width / 3;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    width: $icon-width / 3;
  }
  
  &--grid-block {
    $size: ceil($icon-width / 5);
    $space: ceil($size * 1.6);
    
    background: black;
    box-shadow:
      0 $space 0 0 black,
      0 ($space * -1) 0 0 black,
      $space 0 0 0 black,
      ($space * -1) 0 0 0 black,
      $space $space 0 0 black,
      ($space * -1) $space 0 0 black,
      $space ($space * -1) 0 0 black,
      ($space * -1) ($space * -1) 0 0 black,
    ;
    height: $size;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    width: $size;
  }
  
  &--mic {
    background: black;
    border-radius: $icon-width / 4;
    box-shadow:
      -8px -7px 0 -2px white,
      -5px -7px 0 -2px white,
      -2px -7px 0 -2px white,
      0 -7px 0 -2px white,
      2px -7px 0 -2px white,
      5px -7px 0 -2px white,
      8px -7px 0 -2px white,
      -8px 0 0 -2px white,
      8px 0 0 -2px white,
      0 0 0 2px white,
      0 0 0 4px black,
      0 ($icon-width / 3) 0 ($icon-width / -10) black,
    ;
    height: $icon-width / 2.2;
    left: 50%;
    overflow: hidden;
    position: absolute;
    top: 10%;
    transform: translateX(-50%);
    width: $icon-width / 4;
  }
  
  &--bar-graph {
    $space: $icon-width / 6;
    
    background: black;
    box-shadow:
      0 -#{$space * 2} 0 0 black,
      0 -#{$space} 0 0 black,
      ($space * -1.5) 0 0 0 black,
      ($space * 1.5) 0 0 0 black,
      ($space * 1.5) -#{$space} 0 0 black,
    ;
    height: $icon-width / 4;
    left: 50%;
    position: absolute;
    bottom: 0;
    transform: translate(-50%, -50%);
    width: $icon-width / 5;
  }
  
  &--desktop {
    background: black;
    box-shadow:
      inset 0 0 0 ($icon-width / 12) black,
      inset 0 0 0 $icon-width white,
      ($icon-width / 3.8) ($icon-width / 2.5) 0 ($icon-width / -3) white,
      ($icon-width / -3.8) ($icon-width / 2.5) 0 ($icon-width / -3) white,
      0 ($icon-width / 2.2) 0 ($icon-width / -3) black,
    ;
    height: $icon-width / 1.2;
    width: $icon-width;
  }
  
  &--laptop {
    $bezel: $icon-width / 12;

    box-shadow:
      inset 0 ($bezel * -1.5) 0 0 black,
      inset 0 ($bezel * -.25) 0 $bezel white,
      inset 0 ($bezel * -.25) 0 ($bezel * 2) black,
    ;
    height: $icon-width / 1.2;
    margin: ($icon-width / 5) auto 0;
    width: $icon-width / 1;
    
    &:after {
      background: white;
      bottom: $bezel;
      content: '';
      height: 1px;
      left: 50%;
      position: absolute;
      transform: translateX(-50%);
      width: $bezel * 3;
    }
  }
  
  &--tablet {
    $bezel: $icon-width / 12;
    
    border-radius: 3px;
    box-shadow:
      inset 0 ($bezel * -1.3) 0 $bezel black,
      inset 0 0 0 $bezel black,
    ;
    height: $icon-width / 1.1;
    margin: 0 auto;
    position: relative;
    width: $icon-width / 1.38;
    
    &:after {
      background: white;
      border-radius: $bezel;
      bottom: 2px;
      content: '';
      height: $bezel;
      left: 50%;
      position: absolute;
      transform: translateX(-50%);
      width: $bezel;
    }
  }
  
  &--phone-android {
        border-radius: 3px;
    box-shadow:
      inset 0 0 0 ($icon-width / 18) black,
      inset 0 ($icon-width / 9) 0 0 black,
      inset 0 ($icon-width / -6) 0 0 black,
      inset 0 0 0 $icon-width white,
    ;
    height: $icon-width / 1.3;
    margin: 0 auto;
    position: relative;
    width: $icon-width / 2;
    
    &:after {
      background: white;
      border-radius: 2px;
      bottom: 3px;
      content: '';
      height: 1px;
      left: 50%;
      position: absolute;
      transform: translateX(-50%);
      width: 6px;
    }
  }
  
  &--phone-apple {
    border-radius: 3px;
    box-shadow:
      inset 0 0 0 ($icon-width / 18) black,
      inset 0 ($icon-width / 9) 0 0 black,
      inset 0 ($icon-width / -6) 0 0 black,
      inset 0 0 0 $icon-width white,
    ;
    height: $icon-width / 1.3;
    margin: 0 auto;
    position: relative;
    width: $icon-width / 2.2;
    
    &:after {
      background: white;
      border-radius: 50%;
      bottom: 2px;
      content: '';
      height: 4px;
      left: 50%;
      position: absolute;
      transform: translateX(-50%);
      width: 4px;
    }
  }
  
  
  //        ##   #    # # #    #   ##   ##### ###### #####
  //       #  #  ##   # # ##  ##  #  #    #   #      #    #
  //      #    # # #  # # # ## # #    #   #   #####  #    #
  //      ###### #  # # # #    # ######   #   #      #    #
  //      #    # #   ## # #    # #    #   #   #      #    #
  //      #    # #    # # #    # #    #   #   ###### #####
  
  &--bars {
    $space-x: floor($icon-width / 5);
    $space-y: floor($icon-width / -6);
    $animation: unique-id();
    
    @function makeBars($y, $n) {
      $x: 0;
      $bar: 0 0 0 0 black;
      @for $i from 0 through 5 {
        @if $x <= $y {
          $bar: $bar, #{$space-x * $n} #{($space-y / 2) * $i} 0 0 black
        }
        @else {
          $bar: $bar, #{$space-x * $n} #{$space-y * 0} 0 0 black
        }
        $x: $x + 1;
      }
      @return $bar
    }
    
    animation: $animation 1s linear infinite;
    background: black;
    height: $space-y * -1;
    width: $icon-width / 6;
    
    @keyframes #{$animation} {
      0% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(0, 0),
          makeBars(1, 1),
          makeBars(0, 2),
          makeBars(3, 3),
          makeBars(4, 4),
        ;
      }
      20% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(2, 0),
          makeBars(4, 1),
          makeBars(3, 2),
          makeBars(5, 3),
          makeBars(1, 4),
        ;
      }
      40% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(1, 0),
          makeBars(2, 1),
          makeBars(2, 2),
          makeBars(4, 3),
          makeBars(0, 4),
        ;
      }
      60% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(5, 0),
          makeBars(4, 1),
          makeBars(0, 2),
          makeBars(2, 3),
          makeBars(1, 4),
        ;
      }
      80% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(2, 0),
          makeBars(4, 1),
          makeBars(2, 2),
          makeBars(3, 3),
          makeBars(5, 4),
        ;
      }
      100% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(0, 0),
          makeBars(1, 1),
          makeBars(0, 2),
          makeBars(3, 3),
          makeBars(4, 4),
        ;
      }
    }
  }

  &--bars-wave {
    $space-x: floor($icon-width / 5);
    $space-y: floor($icon-width / -6);
    $animation: unique-id();
    
    @function makeBars($y, $n) {
      $x: 0;
      $bar: 0 0 0 0 black;
      @for $i from 0 through 5 {
        @if $x <= $y {
          $bar: $bar, #{$space-x * $n} #{($space-y / 2) * $i} 0 0 black
        }
        @else {
          $bar: $bar, #{$space-x * $n} #{$space-y * 0} 0 0 black
        }
        $x: $x + 1;
      }
      @return $bar
    }
    
    animation: $animation 1s linear infinite;
    background: black;
    height: $space-y * -1;
    width: $icon-width / 6;
    
    @keyframes #{$animation} {
      0% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(0, 0),
          makeBars(0, 1),
          makeBars(0, 2),
          makeBars(0, 3),
          makeBars(0, 4),
        ;
      }
      8% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(1, 0),
          makeBars(0, 1),
          makeBars(0, 2),
          makeBars(0, 3),
          makeBars(0, 4),
        ;
      }
      16% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(2, 0),
          makeBars(1, 1),
          makeBars(0, 2),
          makeBars(0, 3),
          makeBars(0, 4),
        ;
      }
      24% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(3, 0),
          makeBars(2, 1),
          makeBars(1, 2),
          makeBars(0, 3),
          makeBars(0, 4),
        ;
      }
      32% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(4, 0),
          makeBars(3, 1),
          makeBars(2, 2),
          makeBars(1, 3),
          makeBars(0, 4),
        ;
      }
      40% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(3, 0),
          makeBars(4, 1),
          makeBars(3, 2),
          makeBars(2, 3),
          makeBars(1, 4),
        ;
      }
      48% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(2, 0),
          makeBars(3, 1),
          makeBars(4, 2),
          makeBars(3, 3),
          makeBars(2, 4),
        ;
      }
      56% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(1, 0),
          makeBars(2, 1),
          makeBars(3, 2),
          makeBars(4, 3),
          makeBars(3, 4),
        ;
      }
      64% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(0, 0),
          makeBars(1, 1),
          makeBars(2, 2),
          makeBars(3, 3),
          makeBars(4, 4),
        ;
      }
      72% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(0, 0),
          makeBars(0, 1),
          makeBars(1, 2),
          makeBars(2, 3),
          makeBars(3, 4),
        ;
      }
      80% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(0, 0),
          makeBars(0, 1),
          makeBars(0, 2),
          makeBars(1, 3),
          makeBars(2, 4),
        ;
      }
      88% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(0, 0),
          makeBars(0, 1),
          makeBars(0, 2),
          makeBars(0, 3),
          makeBars(1, 4),
        ;
      }
      96% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(0, 0),
          makeBars(0, 1),
          makeBars(0, 2),
          makeBars(0, 3),
          makeBars(0, 4),
        ;
      }
      100% {
        animation-timing-function: ease-in-out;
        box-shadow:
          makeBars(0, 0),
          makeBars(0, 1),
          makeBars(0, 2),
          makeBars(0, 3),
          makeBars(0, 4),
        ;
      }
    }
  }

  &--progress {
    $animation: unique-id();
    $bars: unique-id();
    
    animation: $animation 10s linear infinite;
    box-shadow:
      inset 0 0 0 1px white,
      0 0 0 1px black,
      inset $icon-width 0 0 0 black,
    ;
    height: $icon-width / 3;
    position: relative;
    width: $icon-width - 2;
    
    &:after {
      animation: $bars 2s infinite linear;
      background: repeating-linear-gradient(
        -45deg,
        rgba(white, .5),
        rgba(white, .5) 4px,
        rgba(transparent, 0) 4px,
        rgba(transparent, 0) 8px /* determines size */
      );
      background-size: 200%;
      content: '';
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
      width: 100%;
    }
    
    @keyframes #{$bars} {
      from {
        background-position: -21px 0;
      }
      to {
        background-position: 2px 0;
      }
    }
    
    @keyframes #{$animation} {
      0% {
        box-shadow:
          inset 0 0 0 1px white,
          0 0 0 1px black,
          inset 0 0 0 0 black,
        ;
      }
      10% {
        box-shadow:
          inset 0 0 0 1px white,
          0 0 0 1px black,
          inset $icon-width 0 0 0 black,
        ;
      }
      20% {
        box-shadow:
          inset 0 0 0 1px white,
          0 0 0 1px black,
          inset 0 0 0 0 black,
        ;
      }
      
      25% {
        box-shadow:
          inset 0 0 0 1px white,
          0 0 0 1px black,
          inset 0 0 0 0 red,
        ;
      }
      35% {
        box-shadow:
          inset 0 0 0 1px white,
          0 0 0 1px black,
          inset $icon-width 0 0 0 red,
        ;
      }
      45% {
        box-shadow:
          inset 0 0 0 1px white,
          0 0 0 1px black,
          inset 0 0 0 0 red,
        ;
      }
      
      50% {
        box-shadow:
          inset 0 0 0 1px white,
          0 0 0 1px black,
          inset 0 0 0 0 green,
        ;
      }
      60% {
        box-shadow:
          inset 0 0 0 1px white,
          0 0 0 1px black,
          inset $icon-width 0 0 0 green,
        ;
      }
      70% {
        box-shadow:
          inset 0 0 0 1px white,
          0 0 0 1px black,
          inset 0 0 0 0 green,
        ;
      }
      
      75% {
        box-shadow:
          inset 0 0 0 1px white,
          0 0 0 1px black,
          inset 0 0 0 0 blue,
        ;
      }
      85% {
        box-shadow:
          inset 0 0 0 1px white,
          0 0 0 1px black,
          inset $icon-width 0 0 0 blue,
        ;
      }
      95% {
        box-shadow:
          inset 0 0 0 1px white,
          0 0 0 1px black,
          inset 0 0 0 0 blue,
        ;
      }
      100% {
        box-shadow:
          inset 0 0 0 1px white,
          0 0 0 1px black,
          inset 0 0 0 0 black,
        ;
      }      
    }
  }

  &--spin {
    $backspin: unique-id();
    $bulge: unique-id();
    $size: ceil($icon-width / 4);
    
    animation: $bulge 1.5s linear infinite, $backspin 4s linear infinite;
    border-radius: 50%;
    content: "";
    height: $size;
    left: 50%;
    margin: ($size / -2);
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    width: $size;
    
    @keyframes #{$backspin} {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(-360deg);
      }
    }
    
    @function makeCircle($y) {
      $shadow: 0 0 0 0 transparent;
      $list: (
        1: (($size * 1.5) 0 0 -2px black),
        2: (($size * 1.05) ($size * 1.05) 0 -2px black),
        3: (0 ($size * 1.5) 0 -2px black),
        4: (($size * -1.05) ($size * 1.05) 0 -2px black),
        5: (($size * -1.5) 0 0 -2px black),
        6: (($size * -1.05) ($size * -1.05) 0 -2px black),
        7: (0 ($size * -1.5) 0 -2px black),
        8: (($size * 1.05) ($size * -1.05) 0 -2px black)
      );
      $change: ($y: set-nth(map-get($list, $y), 4, 1px));
      $list: map-merge($list, $change);
      @for $i from 1 through 8 {
        $shadow: $shadow, map-get($list, $i)
      }
      @return $shadow
    }

    @keyframes #{$bulge} {
      0% {
        box-shadow: makeCircle(1);
      }
      12.5% {
        box-shadow: makeCircle(2);
      }
      25% {
        box-shadow: makeCircle(3);
      }
      37.5% {
        box-shadow: makeCircle(4);
      }
      50% {
        box-shadow: makeCircle(5);
      }
      62.5% {
        box-shadow: makeCircle(6);
      }
      75% {
        box-shadow: makeCircle(7);
      }
      87.5% {
        box-shadow: makeCircle(8);
      }
      100% {
        box-shadow: makeCircle(1);
      }
    }
  }

  &--loading-stacks {
    $color: black;

    $base-size: floor($icon-width / 6);

    $s-size: $base-size * 1;
    $s-offset: floor($s-size * 1);

    $s-offset-left: ($s-offset * 2);
    $s-offset-center: ($s-offset * 4);
    $s-offset-right: ($s-offset * 6);
    $s-offset-top: $s-offset * -10;
    $s-offset-bottom: $s-offset * 10;

    $s-spread: $s-size - $base-size + 1;

    $animation-length: 6s;
    $animation-offset: $animation-length / 12;

    &, &:before, &:after {
      animation: load $animation-length linear #{$animation-offset * 2} infinite;
      background: 0;
      border-radius: 2px;
      content: '';
      height: $base-size;
      left: ($s-offset - $s-offset-left);
      position: absolute;
      top: 50%;
      transform: translate(-50%, -50%);
      width: $base-size;
      z-index: 1;
    }

    &:before {
      animation-delay: #{$animation-offset} ;
      left: 50%;
      top: 250%;
    }

    &:after {
      animation-delay: #{$animation-offset * 3} ;
      left: 50%;
      top: -150%;
    }

    @keyframes load {
      0% {
        animation-timing-function: ease-out;
        box-shadow:
          $s-offset-left   $s-offset-top 0 $s-spread rgba($color, 0),
          $s-offset-center $s-offset-top 0 $s-spread rgba($color, 0),
          $s-offset-right  $s-offset-top 0 $s-spread rgba($color, 0),
        ;
      }

      6% {
        box-shadow:
          $s-offset-left   $s-offset-top 0 $s-spread rgba($color, 0),
          $s-offset-center $s-offset-top 0 $s-spread rgba($color, 0),
          $s-offset-right  $s-offset-top 0 $s-spread rgba($color, 0),
        ;
      }

      9% {
        box-shadow:
          $s-offset-left   0             0 $s-spread rgba($color, 1),
          $s-offset-center $s-offset-top 0 $s-spread rgba($color, 0),
          $s-offset-right  $s-offset-top 0 $s-spread rgba($color, 0),
        ;
      }

      12% {
        box-shadow:
          $s-offset-left   0             0 $s-spread rgba($color, 1),
          $s-offset-center 0             0 $s-spread rgba($color, 1),
          $s-offset-right  $s-offset-top 0 $s-spread rgba($color, 0),
        ;
      }

      15% {
        box-shadow:
          $s-offset-left   0 0 $s-spread $color,
          $s-offset-center 0 0 $s-spread $color,
          $s-offset-right  0 0 $s-spread $color,
        ;
      }

      51% {
        animation-timing-function: ease-in;
        box-shadow:
          $s-offset-left   0 0 $s-spread $color,
          $s-offset-center 0 0 $s-spread $color,
          $s-offset-right  0 0 $s-spread $color,
        ;
      }

      54% {
        box-shadow:
          $s-offset-left   $s-offset-bottom 0 $s-spread rgba($color, 0),
          $s-offset-center 0                0 $s-spread rgba($color, 1),
          $s-offset-right  0                0 $s-spread rgba($color, 1),
        ;
      }

      57% {
        box-shadow:
          $s-offset-left   $s-offset-bottom 0 $s-spread rgba($color, 0),
          $s-offset-center $s-offset-bottom 0 $s-spread rgba($color, 0),
          $s-offset-right  0                0 $s-spread rgba($color, 1),
        ;
      }

      60% {
        box-shadow:
          $s-offset-left   $s-offset-bottom 0 $s-spread rgba($color, 0),
          $s-offset-center $s-offset-bottom 0 $s-spread rgba($color, 0),
          $s-offset-right  $s-offset-bottom 0 $s-spread rgba($color, 0),
        ;
      }

      100% {
        box-shadow:
          $s-offset-left   $s-offset-bottom 0 $s-spread rgba($color, 0),
          $s-offset-center $s-offset-bottom 0 $s-spread rgba($color, 0),
          $s-offset-right  $s-offset-bottom 0 $s-spread rgba($color, 0),
        ;
      }
    }
  }
  
  &--loading-pinwheel {
    $animation: unique-id();
    $size: floor($icon-width / 4);

    animation: $animation 3s linear infinite;
    background: black;
    border-radius: 0px;
    height: $size - 4px;
    left: 50%;
    margin: 0;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    width: $size - 4px;
    
    @keyframes #{$animation} {
      0% {
        box-shadow:
          ($size * -1) ($size * -1) 0 0 black // top left
        ,            0 ($size * -1) 0 0 black // top center
        , ($size * -1)            0 0 0 black // center left
        , ($size * -1)  ($size * 1) 0 0 black // bottom left
        ,  ($size * 1) ($size * -1) 0 0 black // top right
        ,  ($size * 1)            0 0 0 black // center right
        ,            0  ($size * 1) 0 0 black // bottom center
        ,  ($size * 1)  ($size * 1) 0 0 black // bottom right
        ;
      }
      6.25% {
        box-shadow:
          ($size * -1) ($size * -1) 0 0 black // top left
        ,            0 ($size * -1) 0 0 black // top center
        , ($size * -1)            0 0 0 black // center left
        , ($size * -1)  ($size * 1) 0 0 black // bottom left
        ,  ($size * 1) ($size * -1) 0 0 black // top right
        ,  ($size * 1)            0 0 0 black // center right
        ,            0  ($size * 1) 0 0 black // bottom center
        ,  ($size * 1)  ($size * 1) 0 0 black // bottom right
        ;
       }
      12.5% {
        box-shadow:
          ($size * -2) ($size * -1) 0 0 rgba(black, .75) // top left
        ,            0 ($size * -1) 0 0 black // top center
        , ($size * -1)            0 0 0 black // center left
        , ($size * -1)  ($size * 2) 0 0 rgba(black, .75) // bottom left
        ,  ($size * 1) ($size * -2) 0 0 rgba(black, .75) // top right
        ,  ($size * 1)            0 0 0 black // center right
        ,            0  ($size * 1) 0 0 black // bottom center
        ,  ($size * 2)  ($size * 1) 0 0 rgba(black, .75) // bottom right
        ;
       }
      18.75% {
        box-shadow:
          ($size * -3) ($size * -1) 0 0 rgba(black, .5) // top left
        ,            0 ($size * -1) 0 0 black // top center
        , ($size * -1)            0 0 0 black // center left
        , ($size * -1)  ($size * 3) 0 0 rgba(black, .5) // bottom left
        ,  ($size * 1) ($size * -3) 0 0 rgba(black, .5) // top right
        ,  ($size * 1)            0 0 0 black // center right
        ,            0  ($size * 1) 0 0 black // bottom center
        ,  ($size * 3)  ($size * 1) 0 0 rgba(black, .5) // bottom right
        ;
       }
      25% {
        box-shadow:
          ($size * -4) ($size * -1) 0 0 rgba(black, .25) // top left
        , ($size * -1) ($size * -1) 0 0 black // top center
        , ($size * -1)  ($size * 1) 0 0 black // center left
        , ($size * -1)  ($size * 4) 0 0 rgba(black, .25) // bottom left
        ,  ($size * 1) ($size * -4) 0 0 rgba(black, .25) // top right
        ,  ($size * 1) ($size * -1) 0 0 black // center right
        ,  ($size * 1)  ($size * 1) 0 0 black // bottom center
        ,  ($size * 4)  ($size * 1) 0 0 rgba(black, .25) // bottom right
        ;
       }
      31.25% {
        box-shadow:
          ($size * -5) ($size * -1) 0 0 rgba(black, 0) // top left
        , ($size * -2) ($size * -1) 0 0 rgba(black, .75) // top center
        , ($size * -1)  ($size * 2) 0 0 rgba(black, .75) // center left
        , ($size * -1)  ($size * 5) 0 0 rgba(black, 0) // bottom left
        ,  ($size * 1) ($size * -5) 0 0 rgba(black, 0) // top right
        ,  ($size * 1) ($size * -2) 0 0 rgba(black, .75) // center right
        ,  ($size * 2)  ($size * 1) 0 0 rgba(black, .75) // bottom center
        ,  ($size * 5)  ($size * 1) 0 0 rgba(black, 0) // bottom right
        ;
       }
      37.5% {
        box-shadow:
          ($size * -5) ($size * -1) 0 0 rgba(black, 0) // top left
        , ($size * -3) ($size * -1) 0 0 rgba(black, .5) // top center
        , ($size * -1)  ($size * 3) 0 0 rgba(black, .5) // center left
        , ($size * -1)  ($size * 5) 0 0 rgba(black, 0) // bottom left
        ,  ($size * 1) ($size * -5) 0 0 rgba(black, 0) // top right
        ,  ($size * 1) ($size * -3) 0 0 rgba(black, .5) // center right
        ,  ($size * 3)  ($size * 1) 0 0 rgba(black, .5) // bottom center
        ,  ($size * 5)  ($size * 1) 0 0 rgba(black, 0) // bottom right
        ;
       }
      43.75% {
        box-shadow:
           ($size * 5) ($size * -1) 0 0 rgba(black, 0) // top left
        , ($size * -4) ($size * -1) 0 0 rgba(black, .25) // top center
        , ($size * -1)  ($size * 4) 0 0 rgba(black, .25) // center left
        , ($size * -1) ($size * -5) 0 0 rgba(black, 0) // bottom left
        ,  ($size * 1)  ($size * 5) 0 0 rgba(black, 0) // top right
        ,  ($size * 1) ($size * -4) 0 0 rgba(black, .25) // center right
        ,  ($size * 4)  ($size * 1) 0 0 rgba(black, .25) // bottom center
        , ($size * -5)  ($size * 1) 0 0 rgba(black, 0) // bottom right
        ;
       }
      50% {
        box-shadow:
           ($size * 5) ($size * -1) 0 0 rgba(black, 0) // top left
        , ($size * -5) ($size * -1) 0 0 rgba(black, 0) // top center
        , ($size * -1)  ($size * 5) 0 0 rgba(black, 0) // center left
        , ($size * -1) ($size * -5) 0 0 rgba(black, 0) // bottom left
        ,  ($size * 1)  ($size * 5) 0 0 rgba(black, 0) // top right
        ,  ($size * 1) ($size * -5) 0 0 rgba(black, 0) // center right
        ,  ($size * 5)  ($size * 1) 0 0 rgba(black, 0) // bottom center
        , ($size * -5)  ($size * 1) 0 0 rgba(black, 0) // bottom right
        ;
       }
      56.25% {
        box-shadow:
           ($size * 5) ($size * -1) 0 0 rgba(black, 0) // top left
        ,  ($size * 5) ($size * -1) 0 0 rgba(black, 0) // top center
        , ($size * -1) ($size * -5) 0 0 rgba(black, 0) // center left
        , ($size * -1) ($size * -5) 0 0 rgba(black, 0) // bottom left
        ,  ($size * 1)  ($size * 5) 0 0 rgba(black, 0) // top right
        ,  ($size * 1)  ($size * 5) 0 0 rgba(black, 0) // center right
        , ($size * -5)  ($size * 1) 0 0 rgba(black, 0) // bottom center
        , ($size * -5)  ($size * 1) 0 0 rgba(black, 0) // bottom right
        ;
      }
      62.5% {
        box-shadow:
           ($size * 4) ($size * -1) 0 0 rgba(black, .25) // top left
        ,  ($size * 5) ($size * -1) 0 0 rgba(black, 0) // top center
        , ($size * -1) ($size * -5) 0 0 rgba(black, 0) // center left
        , ($size * -1) ($size * -4) 0 0 rgba(black, .25) // bottom left
        ,  ($size * 1)  ($size * 4) 0 0 rgba(black, .25) // top right
        ,  ($size * 1)  ($size * 5) 0 0 rgba(black, 0) // center right
        , ($size * -5)  ($size * 1) 0 0 rgba(black, 0) // bottom center
        , ($size * -4)  ($size * 1) 0 0 rgba(black, .25) // bottom right
        ;
      }
      68.75% {
        box-shadow:
           ($size * 3) ($size * -1) 0 0 rgba(black, .5) // top left
        ,  ($size * 5) ($size * -1) 0 0 rgba(black, 0) // top center
        , ($size * -1) ($size * -5) 0 0 rgba(black, 0) // center left
        , ($size * -1) ($size * -3) 0 0 rgba(black, .5) // bottom left
        ,  ($size * 1)  ($size * 3) 0 0 rgba(black, .5) // top right
        ,  ($size * 1)  ($size * 5) 0 0 rgba(black, 0) // center right
        , ($size * -5)  ($size * 1) 0 0 rgba(black, 0) // bottom center
        , ($size * -3)  ($size * 1) 0 0 rgba(black, .5) // bottom right
        ;
      }
      75% {
        box-shadow:
           ($size * 2) ($size * -1) 0 0 rgba(black, .75) // top left
        ,  ($size * 5) ($size * -1) 0 0 rgba(black, 0) // top center
        , ($size * -1) ($size * -5) 0 0 rgba(black, 0) // center left
        , ($size * -1) ($size * -2) 0 0 rgba(black, .75) // bottom left
        ,  ($size * 1)  ($size * 2) 0 0 rgba(black, .75) // top right
        ,  ($size * 1)  ($size * 5) 0 0 rgba(black, 0) // center right
        , ($size * -5)  ($size * 1) 0 0 rgba(black, 0) // bottom center
        , ($size * -2)  ($size * 1) 0 0 rgba(black, .75) // bottom right
        ;
      }
      81.25% {
        box-shadow:
           ($size * 1) ($size * -1) 0 0 black // top left
        ,  ($size * 4) ($size * -1) 0 0 rgba(black, .25) // top center
        , ($size * -1) ($size * -4) 0 0 rgba(black, .25) // center left
        , ($size * -1) ($size * -1) 0 0 black // bottom left
        ,  ($size * 1)  ($size * 1) 0 0 black // top right
        ,  ($size * 1)  ($size * 4) 0 0 rgba(black, .25) // center right
        , ($size * -4)  ($size * 1) 0 0 rgba(black, .25) // bottom center
        , ($size * -1)  ($size * 1) 0 0 black // bottom right
        ;
      }
      87.5% {
        box-shadow:
                     0 ($size * -1) 0 0 black // top left
        ,  ($size * 3) ($size * -1) 0 0 rgba(black, .5) // top center
        , ($size * -1) ($size * -3) 0 0 rgba(black, .5) // center left
        , ($size * -1)            0 0 0 black // bottom left
        ,  ($size * 1)            0 0 0 black // top right
        ,  ($size * 1)  ($size * 3) 0 0 rgba(black, .5) // center right
        , ($size * -3)  ($size * 1) 0 0 rgba(black, .5) // bottom center
        ,            0  ($size * 1) 0 0 black // bottom right
        ;
      }
      93.75% {
        box-shadow:
          ($size * -1) ($size * -1) 0 0 black // top left
        ,  ($size * 2) ($size * -1) 0 0 rgba(black, .75) // top center
        , ($size * -1) ($size * -2) 0 0 rgba(black, .75) // center left
        , ($size * -1)  ($size * 1) 0 0 black // bottom left
        ,  ($size * 1) ($size * -1) 0 0 black // top right
        ,  ($size * 1)  ($size * 2) 0 0 rgba(black, .75) // center right
        , ($size * -2)  ($size * 1) 0 0 rgba(black, .75) // bottom center
        ,  ($size * 1)  ($size * 1) 0 0 black // bottom right
        ;
       }
      100% {
        box-shadow:
          ($size * -1)            0 0 0 black // top left
        ,  ($size * 1) ($size * -1) 0 0 black // top center
        , ($size * -1) ($size * -1) 0 0 black // center left
        ,            0  ($size * 1) 0 0 black // bottom left
        ,            0 ($size * -1) 0 0 black // top right
        ,  ($size * 1)  ($size * 1) 0 0 black // center right
        , ($size * -1)  ($size * 1) 0 0 black // bottom center
        ,  ($size * 1)            0 0 0 black // bottom right
        ;
      }
    }    
  }
}
